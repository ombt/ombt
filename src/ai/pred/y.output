Grammar

    0 $accept: start $end

    1 start: /* empty */
    2      | start conclusion linesynch
    3      | start expressionlist conclusion linesynch
    4      | start newline
    5      | start error newline
    6      | start QUIT linesynch
    7      | start QUIT newline

    8 expressionlist: separator_expressionlist linesynch
    9               | expressionlist separator_expressionlist linesynch

   10 separator_expressionlist: expression
   11                         | separator_expressionlist separator expression

   12 expression: biconditional

   13 biconditional: implication
   14              | biconditional BICONDITIONAL implication

   15 implication: or
   16            | implication IMPLICATION or

   17 or: and
   18   | or OR and

   19 and: unary
   20    | and AND unary

   21 unary: atom
   22      | NEGATION unary
   23      | universal unary
   24      | existential unary

   25 universal: LEFTUNIVERSAL IDENTIFIER RIGHTUNIVERSAL

   26 existential: LEFTEXISTENTIAL IDENTIFIER RIGHTEXISTENTIAL

   27 atom: predicate
   28     | TRUE
   29     | FALSE
   30     | LPAREN expression RPAREN

   31 predicate: PIDENTIFIER
   32          | PIDENTIFIER LPAREN arglist RPAREN

   33 arglist: arg
   34        | arglist separator arg

   35 arg: term

   36 term: constant
   37     | variable
   38     | function

   39 constant: STRING
   40         | NUMBER

   41 variable: IDENTIFIER

   42 function: IDENTIFIER LPAREN arglist RPAREN

   43 separator: COMMA

   44 conclusion: THEREFORE expression

   45 linesynch: SEMICOLON newline

   46 newline: NEWLINE


Terminals, with rules where they appear

$end (0) 0
error (256) 5
AND (258) 20
BICONDITIONAL (259) 14
COMMA (260) 43
FALSE (261) 29
IDENTIFIER (262) 25 26 41 42
IMPLICATION (263) 16
LEFTEXISTENTIAL (264) 26
LEFTUNIVERSAL (265) 25
LPAREN (266) 30 32 42
NEGATION (267) 22
NEWLINE (268) 46
NUMBER (269) 40
OR (270) 18
PIDENTIFIER (271) 31 32
QUIT (272) 6 7
RIGHTEXISTENTIAL (273) 26
RIGHTUNIVERSAL (274) 25
RPAREN (275) 30 32 42
SEMICOLON (276) 45
STRING (277) 39
THEREFORE (278) 44
TRUE (279) 28


Nonterminals, with rules where they appear

$accept (25)
    on left: 0
start (26)
    on left: 1 2 3 4 5 6 7, on right: 0 2 3 4 5 6 7
expressionlist (27)
    on left: 8 9, on right: 3 9
separator_expressionlist (28)
    on left: 10 11, on right: 8 9 11
expression (29)
    on left: 12, on right: 10 11 30 44
biconditional (30)
    on left: 13 14, on right: 12 14
implication (31)
    on left: 15 16, on right: 13 14 16
or (32)
    on left: 17 18, on right: 15 16 18
and (33)
    on left: 19 20, on right: 17 18 20
unary (34)
    on left: 21 22 23 24, on right: 19 20 22 23 24
universal (35)
    on left: 25, on right: 23
existential (36)
    on left: 26, on right: 24
atom (37)
    on left: 27 28 29 30, on right: 21
predicate (38)
    on left: 31 32, on right: 27
arglist (39)
    on left: 33 34, on right: 32 34 42
arg (40)
    on left: 35, on right: 33 34
term (41)
    on left: 36 37 38, on right: 35
constant (42)
    on left: 39 40, on right: 36
variable (43)
    on left: 41, on right: 37
function (44)
    on left: 42, on right: 38
separator (45)
    on left: 43, on right: 11 34
conclusion (46)
    on left: 44, on right: 2 3
linesynch (47)
    on left: 45, on right: 2 3 6 8 9
newline (48)
    on left: 46, on right: 4 5 7 45


state 0

    0 $accept: . start $end

    $default  reduce using rule 1 (start)

    start  go to state 1


state 1

    0 $accept: start . $end
    2 start: start . conclusion linesynch
    3      | start . expressionlist conclusion linesynch
    4      | start . newline
    5      | start . error newline
    6      | start . QUIT linesynch
    7      | start . QUIT newline

    $end             shift, and go to state 2
    error            shift, and go to state 3
    FALSE            shift, and go to state 4
    LEFTEXISTENTIAL  shift, and go to state 5
    LEFTUNIVERSAL    shift, and go to state 6
    LPAREN           shift, and go to state 7
    NEGATION         shift, and go to state 8
    NEWLINE          shift, and go to state 9
    PIDENTIFIER      shift, and go to state 10
    QUIT             shift, and go to state 11
    THEREFORE        shift, and go to state 12
    TRUE             shift, and go to state 13

    expressionlist            go to state 14
    separator_expressionlist  go to state 15
    expression                go to state 16
    biconditional             go to state 17
    implication               go to state 18
    or                        go to state 19
    and                       go to state 20
    unary                     go to state 21
    universal                 go to state 22
    existential               go to state 23
    atom                      go to state 24
    predicate                 go to state 25
    conclusion                go to state 26
    newline                   go to state 27


state 2

    0 $accept: start $end .

    $default  accept


state 3

    5 start: start error . newline

    NEWLINE  shift, and go to state 9

    newline  go to state 28


state 4

   29 atom: FALSE .

    $default  reduce using rule 29 (atom)


state 5

   26 existential: LEFTEXISTENTIAL . IDENTIFIER RIGHTEXISTENTIAL

    IDENTIFIER  shift, and go to state 29


state 6

   25 universal: LEFTUNIVERSAL . IDENTIFIER RIGHTUNIVERSAL

    IDENTIFIER  shift, and go to state 30


state 7

   30 atom: LPAREN . expression RPAREN

    FALSE            shift, and go to state 4
    LEFTEXISTENTIAL  shift, and go to state 5
    LEFTUNIVERSAL    shift, and go to state 6
    LPAREN           shift, and go to state 7
    NEGATION         shift, and go to state 8
    PIDENTIFIER      shift, and go to state 10
    TRUE             shift, and go to state 13

    expression     go to state 31
    biconditional  go to state 17
    implication    go to state 18
    or             go to state 19
    and            go to state 20
    unary          go to state 21
    universal      go to state 22
    existential    go to state 23
    atom           go to state 24
    predicate      go to state 25


state 8

   22 unary: NEGATION . unary

    FALSE            shift, and go to state 4
    LEFTEXISTENTIAL  shift, and go to state 5
    LEFTUNIVERSAL    shift, and go to state 6
    LPAREN           shift, and go to state 7
    NEGATION         shift, and go to state 8
    PIDENTIFIER      shift, and go to state 10
    TRUE             shift, and go to state 13

    unary        go to state 32
    universal    go to state 22
    existential  go to state 23
    atom         go to state 24
    predicate    go to state 25


state 9

   46 newline: NEWLINE .

    $default  reduce using rule 46 (newline)


state 10

   31 predicate: PIDENTIFIER .
   32          | PIDENTIFIER . LPAREN arglist RPAREN

    LPAREN  shift, and go to state 33

    $default  reduce using rule 31 (predicate)


state 11

    6 start: start QUIT . linesynch
    7      | start QUIT . newline

    NEWLINE    shift, and go to state 9
    SEMICOLON  shift, and go to state 34

    linesynch  go to state 35
    newline    go to state 36


state 12

   44 conclusion: THEREFORE . expression

    FALSE            shift, and go to state 4
    LEFTEXISTENTIAL  shift, and go to state 5
    LEFTUNIVERSAL    shift, and go to state 6
    LPAREN           shift, and go to state 7
    NEGATION         shift, and go to state 8
    PIDENTIFIER      shift, and go to state 10
    TRUE             shift, and go to state 13

    expression     go to state 37
    biconditional  go to state 17
    implication    go to state 18
    or             go to state 19
    and            go to state 20
    unary          go to state 21
    universal      go to state 22
    existential    go to state 23
    atom           go to state 24
    predicate      go to state 25


state 13

   28 atom: TRUE .

    $default  reduce using rule 28 (atom)


state 14

    3 start: start expressionlist . conclusion linesynch
    9 expressionlist: expressionlist . separator_expressionlist linesynch

    FALSE            shift, and go to state 4
    LEFTEXISTENTIAL  shift, and go to state 5
    LEFTUNIVERSAL    shift, and go to state 6
    LPAREN           shift, and go to state 7
    NEGATION         shift, and go to state 8
    PIDENTIFIER      shift, and go to state 10
    THEREFORE        shift, and go to state 12
    TRUE             shift, and go to state 13

    separator_expressionlist  go to state 38
    expression                go to state 16
    biconditional             go to state 17
    implication               go to state 18
    or                        go to state 19
    and                       go to state 20
    unary                     go to state 21
    universal                 go to state 22
    existential               go to state 23
    atom                      go to state 24
    predicate                 go to state 25
    conclusion                go to state 39


state 15

    8 expressionlist: separator_expressionlist . linesynch
   11 separator_expressionlist: separator_expressionlist . separator expression

    COMMA      shift, and go to state 40
    SEMICOLON  shift, and go to state 34

    separator  go to state 41
    linesynch  go to state 42


state 16

   10 separator_expressionlist: expression .

    $default  reduce using rule 10 (separator_expressionlist)


state 17

   12 expression: biconditional .
   14 biconditional: biconditional . BICONDITIONAL implication

    BICONDITIONAL  shift, and go to state 43

    $default  reduce using rule 12 (expression)


state 18

   13 biconditional: implication .
   16 implication: implication . IMPLICATION or

    IMPLICATION  shift, and go to state 44

    $default  reduce using rule 13 (biconditional)


state 19

   15 implication: or .
   18 or: or . OR and

    OR  shift, and go to state 45

    $default  reduce using rule 15 (implication)


state 20

   17 or: and .
   20 and: and . AND unary

    AND  shift, and go to state 46

    $default  reduce using rule 17 (or)


state 21

   19 and: unary .

    $default  reduce using rule 19 (and)


state 22

   23 unary: universal . unary

    FALSE            shift, and go to state 4
    LEFTEXISTENTIAL  shift, and go to state 5
    LEFTUNIVERSAL    shift, and go to state 6
    LPAREN           shift, and go to state 7
    NEGATION         shift, and go to state 8
    PIDENTIFIER      shift, and go to state 10
    TRUE             shift, and go to state 13

    unary        go to state 47
    universal    go to state 22
    existential  go to state 23
    atom         go to state 24
    predicate    go to state 25


state 23

   24 unary: existential . unary

    FALSE            shift, and go to state 4
    LEFTEXISTENTIAL  shift, and go to state 5
    LEFTUNIVERSAL    shift, and go to state 6
    LPAREN           shift, and go to state 7
    NEGATION         shift, and go to state 8
    PIDENTIFIER      shift, and go to state 10
    TRUE             shift, and go to state 13

    unary        go to state 48
    universal    go to state 22
    existential  go to state 23
    atom         go to state 24
    predicate    go to state 25


state 24

   21 unary: atom .

    $default  reduce using rule 21 (unary)


state 25

   27 atom: predicate .

    $default  reduce using rule 27 (atom)


state 26

    2 start: start conclusion . linesynch

    SEMICOLON  shift, and go to state 34

    linesynch  go to state 49


state 27

    4 start: start newline .

    $default  reduce using rule 4 (start)


state 28

    5 start: start error newline .

    $default  reduce using rule 5 (start)


state 29

   26 existential: LEFTEXISTENTIAL IDENTIFIER . RIGHTEXISTENTIAL

    RIGHTEXISTENTIAL  shift, and go to state 50


state 30

   25 universal: LEFTUNIVERSAL IDENTIFIER . RIGHTUNIVERSAL

    RIGHTUNIVERSAL  shift, and go to state 51


state 31

   30 atom: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 52


state 32

   22 unary: NEGATION unary .

    $default  reduce using rule 22 (unary)


state 33

   32 predicate: PIDENTIFIER LPAREN . arglist RPAREN

    IDENTIFIER  shift, and go to state 53
    NUMBER      shift, and go to state 54
    STRING      shift, and go to state 55

    arglist   go to state 56
    arg       go to state 57
    term      go to state 58
    constant  go to state 59
    variable  go to state 60
    function  go to state 61


state 34

   45 linesynch: SEMICOLON . newline

    NEWLINE  shift, and go to state 9

    newline  go to state 62


state 35

    6 start: start QUIT linesynch .

    $default  reduce using rule 6 (start)


state 36

    7 start: start QUIT newline .

    $default  reduce using rule 7 (start)


state 37

   44 conclusion: THEREFORE expression .

    $default  reduce using rule 44 (conclusion)


state 38

    9 expressionlist: expressionlist separator_expressionlist . linesynch
   11 separator_expressionlist: separator_expressionlist . separator expression

    COMMA      shift, and go to state 40
    SEMICOLON  shift, and go to state 34

    separator  go to state 41
    linesynch  go to state 63


state 39

    3 start: start expressionlist conclusion . linesynch

    SEMICOLON  shift, and go to state 34

    linesynch  go to state 64


state 40

   43 separator: COMMA .

    $default  reduce using rule 43 (separator)


state 41

   11 separator_expressionlist: separator_expressionlist separator . expression

    FALSE            shift, and go to state 4
    LEFTEXISTENTIAL  shift, and go to state 5
    LEFTUNIVERSAL    shift, and go to state 6
    LPAREN           shift, and go to state 7
    NEGATION         shift, and go to state 8
    PIDENTIFIER      shift, and go to state 10
    TRUE             shift, and go to state 13

    expression     go to state 65
    biconditional  go to state 17
    implication    go to state 18
    or             go to state 19
    and            go to state 20
    unary          go to state 21
    universal      go to state 22
    existential    go to state 23
    atom           go to state 24
    predicate      go to state 25


state 42

    8 expressionlist: separator_expressionlist linesynch .

    $default  reduce using rule 8 (expressionlist)


state 43

   14 biconditional: biconditional BICONDITIONAL . implication

    FALSE            shift, and go to state 4
    LEFTEXISTENTIAL  shift, and go to state 5
    LEFTUNIVERSAL    shift, and go to state 6
    LPAREN           shift, and go to state 7
    NEGATION         shift, and go to state 8
    PIDENTIFIER      shift, and go to state 10
    TRUE             shift, and go to state 13

    implication  go to state 66
    or           go to state 19
    and          go to state 20
    unary        go to state 21
    universal    go to state 22
    existential  go to state 23
    atom         go to state 24
    predicate    go to state 25


state 44

   16 implication: implication IMPLICATION . or

    FALSE            shift, and go to state 4
    LEFTEXISTENTIAL  shift, and go to state 5
    LEFTUNIVERSAL    shift, and go to state 6
    LPAREN           shift, and go to state 7
    NEGATION         shift, and go to state 8
    PIDENTIFIER      shift, and go to state 10
    TRUE             shift, and go to state 13

    or           go to state 67
    and          go to state 20
    unary        go to state 21
    universal    go to state 22
    existential  go to state 23
    atom         go to state 24
    predicate    go to state 25


state 45

   18 or: or OR . and

    FALSE            shift, and go to state 4
    LEFTEXISTENTIAL  shift, and go to state 5
    LEFTUNIVERSAL    shift, and go to state 6
    LPAREN           shift, and go to state 7
    NEGATION         shift, and go to state 8
    PIDENTIFIER      shift, and go to state 10
    TRUE             shift, and go to state 13

    and          go to state 68
    unary        go to state 21
    universal    go to state 22
    existential  go to state 23
    atom         go to state 24
    predicate    go to state 25


state 46

   20 and: and AND . unary

    FALSE            shift, and go to state 4
    LEFTEXISTENTIAL  shift, and go to state 5
    LEFTUNIVERSAL    shift, and go to state 6
    LPAREN           shift, and go to state 7
    NEGATION         shift, and go to state 8
    PIDENTIFIER      shift, and go to state 10
    TRUE             shift, and go to state 13

    unary        go to state 69
    universal    go to state 22
    existential  go to state 23
    atom         go to state 24
    predicate    go to state 25


state 47

   23 unary: universal unary .

    $default  reduce using rule 23 (unary)


state 48

   24 unary: existential unary .

    $default  reduce using rule 24 (unary)


state 49

    2 start: start conclusion linesynch .

    $default  reduce using rule 2 (start)


state 50

   26 existential: LEFTEXISTENTIAL IDENTIFIER RIGHTEXISTENTIAL .

    $default  reduce using rule 26 (existential)


state 51

   25 universal: LEFTUNIVERSAL IDENTIFIER RIGHTUNIVERSAL .

    $default  reduce using rule 25 (universal)


state 52

   30 atom: LPAREN expression RPAREN .

    $default  reduce using rule 30 (atom)


state 53

   41 variable: IDENTIFIER .
   42 function: IDENTIFIER . LPAREN arglist RPAREN

    LPAREN  shift, and go to state 70

    $default  reduce using rule 41 (variable)


state 54

   40 constant: NUMBER .

    $default  reduce using rule 40 (constant)


state 55

   39 constant: STRING .

    $default  reduce using rule 39 (constant)


state 56

   32 predicate: PIDENTIFIER LPAREN arglist . RPAREN
   34 arglist: arglist . separator arg

    COMMA   shift, and go to state 40
    RPAREN  shift, and go to state 71

    separator  go to state 72


state 57

   33 arglist: arg .

    $default  reduce using rule 33 (arglist)


state 58

   35 arg: term .

    $default  reduce using rule 35 (arg)


state 59

   36 term: constant .

    $default  reduce using rule 36 (term)


state 60

   37 term: variable .

    $default  reduce using rule 37 (term)


state 61

   38 term: function .

    $default  reduce using rule 38 (term)


state 62

   45 linesynch: SEMICOLON newline .

    $default  reduce using rule 45 (linesynch)


state 63

    9 expressionlist: expressionlist separator_expressionlist linesynch .

    $default  reduce using rule 9 (expressionlist)


state 64

    3 start: start expressionlist conclusion linesynch .

    $default  reduce using rule 3 (start)


state 65

   11 separator_expressionlist: separator_expressionlist separator expression .

    $default  reduce using rule 11 (separator_expressionlist)


state 66

   14 biconditional: biconditional BICONDITIONAL implication .
   16 implication: implication . IMPLICATION or

    IMPLICATION  shift, and go to state 44

    $default  reduce using rule 14 (biconditional)


state 67

   16 implication: implication IMPLICATION or .
   18 or: or . OR and

    OR  shift, and go to state 45

    $default  reduce using rule 16 (implication)


state 68

   18 or: or OR and .
   20 and: and . AND unary

    AND  shift, and go to state 46

    $default  reduce using rule 18 (or)


state 69

   20 and: and AND unary .

    $default  reduce using rule 20 (and)


state 70

   42 function: IDENTIFIER LPAREN . arglist RPAREN

    IDENTIFIER  shift, and go to state 53
    NUMBER      shift, and go to state 54
    STRING      shift, and go to state 55

    arglist   go to state 73
    arg       go to state 57
    term      go to state 58
    constant  go to state 59
    variable  go to state 60
    function  go to state 61


state 71

   32 predicate: PIDENTIFIER LPAREN arglist RPAREN .

    $default  reduce using rule 32 (predicate)


state 72

   34 arglist: arglist separator . arg

    IDENTIFIER  shift, and go to state 53
    NUMBER      shift, and go to state 54
    STRING      shift, and go to state 55

    arg       go to state 74
    term      go to state 58
    constant  go to state 59
    variable  go to state 60
    function  go to state 61


state 73

   34 arglist: arglist . separator arg
   42 function: IDENTIFIER LPAREN arglist . RPAREN

    COMMA   shift, and go to state 40
    RPAREN  shift, and go to state 75

    separator  go to state 72


state 74

   34 arglist: arglist separator arg .

    $default  reduce using rule 34 (arglist)


state 75

   42 function: IDENTIFIER LPAREN arglist RPAREN .

    $default  reduce using rule 42 (function)
