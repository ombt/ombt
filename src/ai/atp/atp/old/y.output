Grammar

    0 $accept: start $end

    1 start: %empty
    2      | start argument sosconclusionlist rbrace
    3      | start argument expressionlist rbrace
    4      | start argument expressionlist sosconclusionlist rbrace
    5      | start error RBRACE
    6      | start QUIT linesynch
    7      | start options RBRACE
    8      | start options optionslist RBRACE

    9 options: OPTION LBRACE

   10 optionslist: IDENTIFIER EQUAL STRING linesynch
   11            | IDENTIFIER EQUAL NUMBER linesynch
   12            | IDENTIFIER EQUAL NEGNUMBER linesynch
   13            | optionslist IDENTIFIER EQUAL STRING linesynch
   14            | optionslist IDENTIFIER EQUAL NUMBER linesynch
   15            | optionslist IDENTIFIER EQUAL NEGNUMBER linesynch

   16 rbrace: RBRACE

   17 argument: ARGUMENT LBRACE

   18 sosconclusionlist: sos_option conclusiontype linesynch

   19 expressionlist: separator_expressionlist linesynch
   20               | expressionlist separator_expressionlist linesynch

   21 separator_expressionlist: sos_option expression
   22                         | separator_expressionlist separator sos_option expression

   23 sos_option: %empty
   24           | SOS

   25 expression: biconditional

   26 biconditional: implication
   27              | biconditional BICONDITIONAL implication

   28 implication: or
   29            | implication IMPLICATION or

   30 or: and
   31   | or OR and

   32 and: unary
   33    | and AND unary

   34 unary: atom
   35      | NEGATION unary
   36      | universal unary
   37      | existential unary

   38 universal: LEFTUNIVERSAL IDENTIFIER RIGHTUNIVERSAL
   39          | UNIVERSAL LPAREN IDENTIFIER RPAREN

   40 existential: LEFTEXISTENTIAL IDENTIFIER RIGHTEXISTENTIAL
   41            | EXISTENTIAL LPAREN IDENTIFIER RPAREN

   42 atom: predicate
   43     | TRUE
   44     | FALSE
   45     | LPAREN expression RPAREN

   46 predicate: PIDENTIFIER
   47          | PIDENTIFIER LPAREN arglist RPAREN
   48          | term EQUAL term
   49          | term NOTEQUAL term

   50 arglist: arg
   51        | arglist separator arg

   52 arg: term

   53 term: constant
   54     | variable
   55     | function

   56 constant: STRING
   57         | NUMBER

   58 variable: IDENTIFIER

   59 function: IDENTIFIER LPAREN arglist RPAREN

   60 separator: COMMA

   61 conclusiontype: THEREFORE expression
   62               | QUERY expression

   63 linesynch: SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256) 5
AND (258) 33
ARGUMENT (259) 17
BICONDITIONAL (260) 27
COMMA (261) 60
FALSE (262) 44
IDENTIFIER (263) 10 11 12 13 14 15 38 39 40 41 58 59
EQUAL (264) 10 11 12 13 14 15 48
NOTEQUAL (265) 49
IMPLICATION (266) 29
EXISTENTIAL (267) 41
LEFTEXISTENTIAL (268) 40
LEFTUNIVERSAL (269) 38
UNIVERSAL (270) 39
LPAREN (271) 39 41 45 47 59
NEGATION (272) 35
NUMBER (273) 11 14 57
NEGNUMBER (274) 12 15
OR (275) 31
PIDENTIFIER (276) 46 47
QUIT (277) 6
RIGHTEXISTENTIAL (278) 40
RIGHTUNIVERSAL (279) 38
RPAREN (280) 39 41 45 47 59
SEMICOLON (281) 63
SOS (282) 24
STRING (283) 10 13 56
THEREFORE (284) 61
QUERY (285) 62
TRUE (286) 43
LBRACE (287) 9 17
RBRACE (288) 5 7 8 16
OPTION (289) 9


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
start (36)
    on left: 1 2 3 4 5 6 7 8, on right: 0 2 3 4 5 6 7 8
options (37)
    on left: 9, on right: 7 8
optionslist (38)
    on left: 10 11 12 13 14 15, on right: 8 13 14 15
rbrace (39)
    on left: 16, on right: 2 3 4
argument (40)
    on left: 17, on right: 2 3 4
sosconclusionlist (41)
    on left: 18, on right: 2 4
expressionlist (42)
    on left: 19 20, on right: 3 4 20
separator_expressionlist (43)
    on left: 21 22, on right: 19 20 22
sos_option (44)
    on left: 23 24, on right: 18 21 22
expression (45)
    on left: 25, on right: 21 22 45 61 62
biconditional (46)
    on left: 26 27, on right: 25 27
implication (47)
    on left: 28 29, on right: 26 27 29
or (48)
    on left: 30 31, on right: 28 29 31
and (49)
    on left: 32 33, on right: 30 31 33
unary (50)
    on left: 34 35 36 37, on right: 32 33 35 36 37
universal (51)
    on left: 38 39, on right: 36
existential (52)
    on left: 40 41, on right: 37
atom (53)
    on left: 42 43 44 45, on right: 34
predicate (54)
    on left: 46 47 48 49, on right: 42
arglist (55)
    on left: 50 51, on right: 47 51 59
arg (56)
    on left: 52, on right: 50 51
term (57)
    on left: 53 54 55, on right: 48 49 52
constant (58)
    on left: 56 57, on right: 53
variable (59)
    on left: 58, on right: 54
function (60)
    on left: 59, on right: 55
separator (61)
    on left: 60, on right: 22 51
conclusiontype (62)
    on left: 61 62, on right: 18
linesynch (63)
    on left: 63, on right: 6 10 11 12 13 14 15 18 19 20


State 0

    0 $accept: . start $end

    $default  reduce using rule 1 (start)

    start  go to state 1


State 1

    0 $accept: start . $end
    2 start: start . argument sosconclusionlist rbrace
    3      | start . argument expressionlist rbrace
    4      | start . argument expressionlist sosconclusionlist rbrace
    5      | start . error RBRACE
    6      | start . QUIT linesynch
    7      | start . options RBRACE
    8      | start . options optionslist RBRACE

    $end      shift, and go to state 2
    error     shift, and go to state 3
    ARGUMENT  shift, and go to state 4
    QUIT      shift, and go to state 5
    OPTION    shift, and go to state 6

    options   go to state 7
    argument  go to state 8


State 2

    0 $accept: start $end .

    $default  accept


State 3

    5 start: start error . RBRACE

    RBRACE  shift, and go to state 9


State 4

   17 argument: ARGUMENT . LBRACE

    LBRACE  shift, and go to state 10


State 5

    6 start: start QUIT . linesynch

    SEMICOLON  shift, and go to state 11

    linesynch  go to state 12


State 6

    9 options: OPTION . LBRACE

    LBRACE  shift, and go to state 13


State 7

    7 start: start options . RBRACE
    8      | start options . optionslist RBRACE

    IDENTIFIER  shift, and go to state 14
    RBRACE      shift, and go to state 15

    optionslist  go to state 16


State 8

    2 start: start argument . sosconclusionlist rbrace
    3      | start argument . expressionlist rbrace
    4      | start argument . expressionlist sosconclusionlist rbrace

    SOS  shift, and go to state 17

    $default  reduce using rule 23 (sos_option)

    sosconclusionlist         go to state 18
    expressionlist            go to state 19
    separator_expressionlist  go to state 20
    sos_option                go to state 21


State 9

    5 start: start error RBRACE .

    $default  reduce using rule 5 (start)


State 10

   17 argument: ARGUMENT LBRACE .

    $default  reduce using rule 17 (argument)


State 11

   63 linesynch: SEMICOLON .

    $default  reduce using rule 63 (linesynch)


State 12

    6 start: start QUIT linesynch .

    $default  reduce using rule 6 (start)


State 13

    9 options: OPTION LBRACE .

    $default  reduce using rule 9 (options)


State 14

   10 optionslist: IDENTIFIER . EQUAL STRING linesynch
   11            | IDENTIFIER . EQUAL NUMBER linesynch
   12            | IDENTIFIER . EQUAL NEGNUMBER linesynch

    EQUAL  shift, and go to state 22


State 15

    7 start: start options RBRACE .

    $default  reduce using rule 7 (start)


State 16

    8 start: start options optionslist . RBRACE
   13 optionslist: optionslist . IDENTIFIER EQUAL STRING linesynch
   14            | optionslist . IDENTIFIER EQUAL NUMBER linesynch
   15            | optionslist . IDENTIFIER EQUAL NEGNUMBER linesynch

    IDENTIFIER  shift, and go to state 23
    RBRACE      shift, and go to state 24


State 17

   24 sos_option: SOS .

    $default  reduce using rule 24 (sos_option)


State 18

    2 start: start argument sosconclusionlist . rbrace

    RBRACE  shift, and go to state 25

    rbrace  go to state 26


State 19

    3 start: start argument expressionlist . rbrace
    4      | start argument expressionlist . sosconclusionlist rbrace
   20 expressionlist: expressionlist . separator_expressionlist linesynch

    SOS     shift, and go to state 17
    RBRACE  shift, and go to state 25

    $default  reduce using rule 23 (sos_option)

    rbrace                    go to state 27
    sosconclusionlist         go to state 28
    separator_expressionlist  go to state 29
    sos_option                go to state 21


State 20

   19 expressionlist: separator_expressionlist . linesynch
   22 separator_expressionlist: separator_expressionlist . separator sos_option expression

    COMMA      shift, and go to state 30
    SEMICOLON  shift, and go to state 11

    separator  go to state 31
    linesynch  go to state 32


State 21

   18 sosconclusionlist: sos_option . conclusiontype linesynch
   21 separator_expressionlist: sos_option . expression

    FALSE            shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    EXISTENTIAL      shift, and go to state 35
    LEFTEXISTENTIAL  shift, and go to state 36
    LEFTUNIVERSAL    shift, and go to state 37
    UNIVERSAL        shift, and go to state 38
    LPAREN           shift, and go to state 39
    NEGATION         shift, and go to state 40
    NUMBER           shift, and go to state 41
    PIDENTIFIER      shift, and go to state 42
    STRING           shift, and go to state 43
    THEREFORE        shift, and go to state 44
    QUERY            shift, and go to state 45
    TRUE             shift, and go to state 46

    expression      go to state 47
    biconditional   go to state 48
    implication     go to state 49
    or              go to state 50
    and             go to state 51
    unary           go to state 52
    universal       go to state 53
    existential     go to state 54
    atom            go to state 55
    predicate       go to state 56
    term            go to state 57
    constant        go to state 58
    variable        go to state 59
    function        go to state 60
    conclusiontype  go to state 61


State 22

   10 optionslist: IDENTIFIER EQUAL . STRING linesynch
   11            | IDENTIFIER EQUAL . NUMBER linesynch
   12            | IDENTIFIER EQUAL . NEGNUMBER linesynch

    NUMBER     shift, and go to state 62
    NEGNUMBER  shift, and go to state 63
    STRING     shift, and go to state 64


State 23

   13 optionslist: optionslist IDENTIFIER . EQUAL STRING linesynch
   14            | optionslist IDENTIFIER . EQUAL NUMBER linesynch
   15            | optionslist IDENTIFIER . EQUAL NEGNUMBER linesynch

    EQUAL  shift, and go to state 65


State 24

    8 start: start options optionslist RBRACE .

    $default  reduce using rule 8 (start)


State 25

   16 rbrace: RBRACE .

    $default  reduce using rule 16 (rbrace)


State 26

    2 start: start argument sosconclusionlist rbrace .

    $default  reduce using rule 2 (start)


State 27

    3 start: start argument expressionlist rbrace .

    $default  reduce using rule 3 (start)


State 28

    4 start: start argument expressionlist sosconclusionlist . rbrace

    RBRACE  shift, and go to state 25

    rbrace  go to state 66


State 29

   20 expressionlist: expressionlist separator_expressionlist . linesynch
   22 separator_expressionlist: separator_expressionlist . separator sos_option expression

    COMMA      shift, and go to state 30
    SEMICOLON  shift, and go to state 11

    separator  go to state 31
    linesynch  go to state 67


State 30

   60 separator: COMMA .

    $default  reduce using rule 60 (separator)


State 31

   22 separator_expressionlist: separator_expressionlist separator . sos_option expression

    SOS  shift, and go to state 17

    $default  reduce using rule 23 (sos_option)

    sos_option  go to state 68


State 32

   19 expressionlist: separator_expressionlist linesynch .

    $default  reduce using rule 19 (expressionlist)


State 33

   44 atom: FALSE .

    $default  reduce using rule 44 (atom)


State 34

   58 variable: IDENTIFIER .
   59 function: IDENTIFIER . LPAREN arglist RPAREN

    LPAREN  shift, and go to state 69

    $default  reduce using rule 58 (variable)


State 35

   41 existential: EXISTENTIAL . LPAREN IDENTIFIER RPAREN

    LPAREN  shift, and go to state 70


State 36

   40 existential: LEFTEXISTENTIAL . IDENTIFIER RIGHTEXISTENTIAL

    IDENTIFIER  shift, and go to state 71


State 37

   38 universal: LEFTUNIVERSAL . IDENTIFIER RIGHTUNIVERSAL

    IDENTIFIER  shift, and go to state 72


State 38

   39 universal: UNIVERSAL . LPAREN IDENTIFIER RPAREN

    LPAREN  shift, and go to state 73


State 39

   45 atom: LPAREN . expression RPAREN

    FALSE            shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    EXISTENTIAL      shift, and go to state 35
    LEFTEXISTENTIAL  shift, and go to state 36
    LEFTUNIVERSAL    shift, and go to state 37
    UNIVERSAL        shift, and go to state 38
    LPAREN           shift, and go to state 39
    NEGATION         shift, and go to state 40
    NUMBER           shift, and go to state 41
    PIDENTIFIER      shift, and go to state 42
    STRING           shift, and go to state 43
    TRUE             shift, and go to state 46

    expression     go to state 74
    biconditional  go to state 48
    implication    go to state 49
    or             go to state 50
    and            go to state 51
    unary          go to state 52
    universal      go to state 53
    existential    go to state 54
    atom           go to state 55
    predicate      go to state 56
    term           go to state 57
    constant       go to state 58
    variable       go to state 59
    function       go to state 60


State 40

   35 unary: NEGATION . unary

    FALSE            shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    EXISTENTIAL      shift, and go to state 35
    LEFTEXISTENTIAL  shift, and go to state 36
    LEFTUNIVERSAL    shift, and go to state 37
    UNIVERSAL        shift, and go to state 38
    LPAREN           shift, and go to state 39
    NEGATION         shift, and go to state 40
    NUMBER           shift, and go to state 41
    PIDENTIFIER      shift, and go to state 42
    STRING           shift, and go to state 43
    TRUE             shift, and go to state 46

    unary        go to state 75
    universal    go to state 53
    existential  go to state 54
    atom         go to state 55
    predicate    go to state 56
    term         go to state 57
    constant     go to state 58
    variable     go to state 59
    function     go to state 60


State 41

   57 constant: NUMBER .

    $default  reduce using rule 57 (constant)


State 42

   46 predicate: PIDENTIFIER .
   47          | PIDENTIFIER . LPAREN arglist RPAREN

    LPAREN  shift, and go to state 76

    $default  reduce using rule 46 (predicate)


State 43

   56 constant: STRING .

    $default  reduce using rule 56 (constant)


State 44

   61 conclusiontype: THEREFORE . expression

    FALSE            shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    EXISTENTIAL      shift, and go to state 35
    LEFTEXISTENTIAL  shift, and go to state 36
    LEFTUNIVERSAL    shift, and go to state 37
    UNIVERSAL        shift, and go to state 38
    LPAREN           shift, and go to state 39
    NEGATION         shift, and go to state 40
    NUMBER           shift, and go to state 41
    PIDENTIFIER      shift, and go to state 42
    STRING           shift, and go to state 43
    TRUE             shift, and go to state 46

    expression     go to state 77
    biconditional  go to state 48
    implication    go to state 49
    or             go to state 50
    and            go to state 51
    unary          go to state 52
    universal      go to state 53
    existential    go to state 54
    atom           go to state 55
    predicate      go to state 56
    term           go to state 57
    constant       go to state 58
    variable       go to state 59
    function       go to state 60


State 45

   62 conclusiontype: QUERY . expression

    FALSE            shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    EXISTENTIAL      shift, and go to state 35
    LEFTEXISTENTIAL  shift, and go to state 36
    LEFTUNIVERSAL    shift, and go to state 37
    UNIVERSAL        shift, and go to state 38
    LPAREN           shift, and go to state 39
    NEGATION         shift, and go to state 40
    NUMBER           shift, and go to state 41
    PIDENTIFIER      shift, and go to state 42
    STRING           shift, and go to state 43
    TRUE             shift, and go to state 46

    expression     go to state 78
    biconditional  go to state 48
    implication    go to state 49
    or             go to state 50
    and            go to state 51
    unary          go to state 52
    universal      go to state 53
    existential    go to state 54
    atom           go to state 55
    predicate      go to state 56
    term           go to state 57
    constant       go to state 58
    variable       go to state 59
    function       go to state 60


State 46

   43 atom: TRUE .

    $default  reduce using rule 43 (atom)


State 47

   21 separator_expressionlist: sos_option expression .

    $default  reduce using rule 21 (separator_expressionlist)


State 48

   25 expression: biconditional .
   27 biconditional: biconditional . BICONDITIONAL implication

    BICONDITIONAL  shift, and go to state 79

    $default  reduce using rule 25 (expression)


State 49

   26 biconditional: implication .
   29 implication: implication . IMPLICATION or

    IMPLICATION  shift, and go to state 80

    $default  reduce using rule 26 (biconditional)


State 50

   28 implication: or .
   31 or: or . OR and

    OR  shift, and go to state 81

    $default  reduce using rule 28 (implication)


State 51

   30 or: and .
   33 and: and . AND unary

    AND  shift, and go to state 82

    $default  reduce using rule 30 (or)


State 52

   32 and: unary .

    $default  reduce using rule 32 (and)


State 53

   36 unary: universal . unary

    FALSE            shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    EXISTENTIAL      shift, and go to state 35
    LEFTEXISTENTIAL  shift, and go to state 36
    LEFTUNIVERSAL    shift, and go to state 37
    UNIVERSAL        shift, and go to state 38
    LPAREN           shift, and go to state 39
    NEGATION         shift, and go to state 40
    NUMBER           shift, and go to state 41
    PIDENTIFIER      shift, and go to state 42
    STRING           shift, and go to state 43
    TRUE             shift, and go to state 46

    unary        go to state 83
    universal    go to state 53
    existential  go to state 54
    atom         go to state 55
    predicate    go to state 56
    term         go to state 57
    constant     go to state 58
    variable     go to state 59
    function     go to state 60


State 54

   37 unary: existential . unary

    FALSE            shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    EXISTENTIAL      shift, and go to state 35
    LEFTEXISTENTIAL  shift, and go to state 36
    LEFTUNIVERSAL    shift, and go to state 37
    UNIVERSAL        shift, and go to state 38
    LPAREN           shift, and go to state 39
    NEGATION         shift, and go to state 40
    NUMBER           shift, and go to state 41
    PIDENTIFIER      shift, and go to state 42
    STRING           shift, and go to state 43
    TRUE             shift, and go to state 46

    unary        go to state 84
    universal    go to state 53
    existential  go to state 54
    atom         go to state 55
    predicate    go to state 56
    term         go to state 57
    constant     go to state 58
    variable     go to state 59
    function     go to state 60


State 55

   34 unary: atom .

    $default  reduce using rule 34 (unary)


State 56

   42 atom: predicate .

    $default  reduce using rule 42 (atom)


State 57

   48 predicate: term . EQUAL term
   49          | term . NOTEQUAL term

    EQUAL     shift, and go to state 85
    NOTEQUAL  shift, and go to state 86


State 58

   53 term: constant .

    $default  reduce using rule 53 (term)


State 59

   54 term: variable .

    $default  reduce using rule 54 (term)


State 60

   55 term: function .

    $default  reduce using rule 55 (term)


State 61

   18 sosconclusionlist: sos_option conclusiontype . linesynch

    SEMICOLON  shift, and go to state 11

    linesynch  go to state 87


State 62

   11 optionslist: IDENTIFIER EQUAL NUMBER . linesynch

    SEMICOLON  shift, and go to state 11

    linesynch  go to state 88


State 63

   12 optionslist: IDENTIFIER EQUAL NEGNUMBER . linesynch

    SEMICOLON  shift, and go to state 11

    linesynch  go to state 89


State 64

   10 optionslist: IDENTIFIER EQUAL STRING . linesynch

    SEMICOLON  shift, and go to state 11

    linesynch  go to state 90


State 65

   13 optionslist: optionslist IDENTIFIER EQUAL . STRING linesynch
   14            | optionslist IDENTIFIER EQUAL . NUMBER linesynch
   15            | optionslist IDENTIFIER EQUAL . NEGNUMBER linesynch

    NUMBER     shift, and go to state 91
    NEGNUMBER  shift, and go to state 92
    STRING     shift, and go to state 93


State 66

    4 start: start argument expressionlist sosconclusionlist rbrace .

    $default  reduce using rule 4 (start)


State 67

   20 expressionlist: expressionlist separator_expressionlist linesynch .

    $default  reduce using rule 20 (expressionlist)


State 68

   22 separator_expressionlist: separator_expressionlist separator sos_option . expression

    FALSE            shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    EXISTENTIAL      shift, and go to state 35
    LEFTEXISTENTIAL  shift, and go to state 36
    LEFTUNIVERSAL    shift, and go to state 37
    UNIVERSAL        shift, and go to state 38
    LPAREN           shift, and go to state 39
    NEGATION         shift, and go to state 40
    NUMBER           shift, and go to state 41
    PIDENTIFIER      shift, and go to state 42
    STRING           shift, and go to state 43
    TRUE             shift, and go to state 46

    expression     go to state 94
    biconditional  go to state 48
    implication    go to state 49
    or             go to state 50
    and            go to state 51
    unary          go to state 52
    universal      go to state 53
    existential    go to state 54
    atom           go to state 55
    predicate      go to state 56
    term           go to state 57
    constant       go to state 58
    variable       go to state 59
    function       go to state 60


State 69

   59 function: IDENTIFIER LPAREN . arglist RPAREN

    IDENTIFIER  shift, and go to state 34
    NUMBER      shift, and go to state 41
    STRING      shift, and go to state 43

    arglist   go to state 95
    arg       go to state 96
    term      go to state 97
    constant  go to state 58
    variable  go to state 59
    function  go to state 60


State 70

   41 existential: EXISTENTIAL LPAREN . IDENTIFIER RPAREN

    IDENTIFIER  shift, and go to state 98


State 71

   40 existential: LEFTEXISTENTIAL IDENTIFIER . RIGHTEXISTENTIAL

    RIGHTEXISTENTIAL  shift, and go to state 99


State 72

   38 universal: LEFTUNIVERSAL IDENTIFIER . RIGHTUNIVERSAL

    RIGHTUNIVERSAL  shift, and go to state 100


State 73

   39 universal: UNIVERSAL LPAREN . IDENTIFIER RPAREN

    IDENTIFIER  shift, and go to state 101


State 74

   45 atom: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 102


State 75

   35 unary: NEGATION unary .

    $default  reduce using rule 35 (unary)


State 76

   47 predicate: PIDENTIFIER LPAREN . arglist RPAREN

    IDENTIFIER  shift, and go to state 34
    NUMBER      shift, and go to state 41
    STRING      shift, and go to state 43

    arglist   go to state 103
    arg       go to state 96
    term      go to state 97
    constant  go to state 58
    variable  go to state 59
    function  go to state 60


State 77

   61 conclusiontype: THEREFORE expression .

    $default  reduce using rule 61 (conclusiontype)


State 78

   62 conclusiontype: QUERY expression .

    $default  reduce using rule 62 (conclusiontype)


State 79

   27 biconditional: biconditional BICONDITIONAL . implication

    FALSE            shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    EXISTENTIAL      shift, and go to state 35
    LEFTEXISTENTIAL  shift, and go to state 36
    LEFTUNIVERSAL    shift, and go to state 37
    UNIVERSAL        shift, and go to state 38
    LPAREN           shift, and go to state 39
    NEGATION         shift, and go to state 40
    NUMBER           shift, and go to state 41
    PIDENTIFIER      shift, and go to state 42
    STRING           shift, and go to state 43
    TRUE             shift, and go to state 46

    implication  go to state 104
    or           go to state 50
    and          go to state 51
    unary        go to state 52
    universal    go to state 53
    existential  go to state 54
    atom         go to state 55
    predicate    go to state 56
    term         go to state 57
    constant     go to state 58
    variable     go to state 59
    function     go to state 60


State 80

   29 implication: implication IMPLICATION . or

    FALSE            shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    EXISTENTIAL      shift, and go to state 35
    LEFTEXISTENTIAL  shift, and go to state 36
    LEFTUNIVERSAL    shift, and go to state 37
    UNIVERSAL        shift, and go to state 38
    LPAREN           shift, and go to state 39
    NEGATION         shift, and go to state 40
    NUMBER           shift, and go to state 41
    PIDENTIFIER      shift, and go to state 42
    STRING           shift, and go to state 43
    TRUE             shift, and go to state 46

    or           go to state 105
    and          go to state 51
    unary        go to state 52
    universal    go to state 53
    existential  go to state 54
    atom         go to state 55
    predicate    go to state 56
    term         go to state 57
    constant     go to state 58
    variable     go to state 59
    function     go to state 60


State 81

   31 or: or OR . and

    FALSE            shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    EXISTENTIAL      shift, and go to state 35
    LEFTEXISTENTIAL  shift, and go to state 36
    LEFTUNIVERSAL    shift, and go to state 37
    UNIVERSAL        shift, and go to state 38
    LPAREN           shift, and go to state 39
    NEGATION         shift, and go to state 40
    NUMBER           shift, and go to state 41
    PIDENTIFIER      shift, and go to state 42
    STRING           shift, and go to state 43
    TRUE             shift, and go to state 46

    and          go to state 106
    unary        go to state 52
    universal    go to state 53
    existential  go to state 54
    atom         go to state 55
    predicate    go to state 56
    term         go to state 57
    constant     go to state 58
    variable     go to state 59
    function     go to state 60


State 82

   33 and: and AND . unary

    FALSE            shift, and go to state 33
    IDENTIFIER       shift, and go to state 34
    EXISTENTIAL      shift, and go to state 35
    LEFTEXISTENTIAL  shift, and go to state 36
    LEFTUNIVERSAL    shift, and go to state 37
    UNIVERSAL        shift, and go to state 38
    LPAREN           shift, and go to state 39
    NEGATION         shift, and go to state 40
    NUMBER           shift, and go to state 41
    PIDENTIFIER      shift, and go to state 42
    STRING           shift, and go to state 43
    TRUE             shift, and go to state 46

    unary        go to state 107
    universal    go to state 53
    existential  go to state 54
    atom         go to state 55
    predicate    go to state 56
    term         go to state 57
    constant     go to state 58
    variable     go to state 59
    function     go to state 60


State 83

   36 unary: universal unary .

    $default  reduce using rule 36 (unary)


State 84

   37 unary: existential unary .

    $default  reduce using rule 37 (unary)


State 85

   48 predicate: term EQUAL . term

    IDENTIFIER  shift, and go to state 34
    NUMBER      shift, and go to state 41
    STRING      shift, and go to state 43

    term      go to state 108
    constant  go to state 58
    variable  go to state 59
    function  go to state 60


State 86

   49 predicate: term NOTEQUAL . term

    IDENTIFIER  shift, and go to state 34
    NUMBER      shift, and go to state 41
    STRING      shift, and go to state 43

    term      go to state 109
    constant  go to state 58
    variable  go to state 59
    function  go to state 60


State 87

   18 sosconclusionlist: sos_option conclusiontype linesynch .

    $default  reduce using rule 18 (sosconclusionlist)


State 88

   11 optionslist: IDENTIFIER EQUAL NUMBER linesynch .

    $default  reduce using rule 11 (optionslist)


State 89

   12 optionslist: IDENTIFIER EQUAL NEGNUMBER linesynch .

    $default  reduce using rule 12 (optionslist)


State 90

   10 optionslist: IDENTIFIER EQUAL STRING linesynch .

    $default  reduce using rule 10 (optionslist)


State 91

   14 optionslist: optionslist IDENTIFIER EQUAL NUMBER . linesynch

    SEMICOLON  shift, and go to state 11

    linesynch  go to state 110


State 92

   15 optionslist: optionslist IDENTIFIER EQUAL NEGNUMBER . linesynch

    SEMICOLON  shift, and go to state 11

    linesynch  go to state 111


State 93

   13 optionslist: optionslist IDENTIFIER EQUAL STRING . linesynch

    SEMICOLON  shift, and go to state 11

    linesynch  go to state 112


State 94

   22 separator_expressionlist: separator_expressionlist separator sos_option expression .

    $default  reduce using rule 22 (separator_expressionlist)


State 95

   51 arglist: arglist . separator arg
   59 function: IDENTIFIER LPAREN arglist . RPAREN

    COMMA   shift, and go to state 30
    RPAREN  shift, and go to state 113

    separator  go to state 114


State 96

   50 arglist: arg .

    $default  reduce using rule 50 (arglist)


State 97

   52 arg: term .

    $default  reduce using rule 52 (arg)


State 98

   41 existential: EXISTENTIAL LPAREN IDENTIFIER . RPAREN

    RPAREN  shift, and go to state 115


State 99

   40 existential: LEFTEXISTENTIAL IDENTIFIER RIGHTEXISTENTIAL .

    $default  reduce using rule 40 (existential)


State 100

   38 universal: LEFTUNIVERSAL IDENTIFIER RIGHTUNIVERSAL .

    $default  reduce using rule 38 (universal)


State 101

   39 universal: UNIVERSAL LPAREN IDENTIFIER . RPAREN

    RPAREN  shift, and go to state 116


State 102

   45 atom: LPAREN expression RPAREN .

    $default  reduce using rule 45 (atom)


State 103

   47 predicate: PIDENTIFIER LPAREN arglist . RPAREN
   51 arglist: arglist . separator arg

    COMMA   shift, and go to state 30
    RPAREN  shift, and go to state 117

    separator  go to state 114


State 104

   27 biconditional: biconditional BICONDITIONAL implication .
   29 implication: implication . IMPLICATION or

    IMPLICATION  shift, and go to state 80

    $default  reduce using rule 27 (biconditional)


State 105

   29 implication: implication IMPLICATION or .
   31 or: or . OR and

    OR  shift, and go to state 81

    $default  reduce using rule 29 (implication)


State 106

   31 or: or OR and .
   33 and: and . AND unary

    AND  shift, and go to state 82

    $default  reduce using rule 31 (or)


State 107

   33 and: and AND unary .

    $default  reduce using rule 33 (and)


State 108

   48 predicate: term EQUAL term .

    $default  reduce using rule 48 (predicate)


State 109

   49 predicate: term NOTEQUAL term .

    $default  reduce using rule 49 (predicate)


State 110

   14 optionslist: optionslist IDENTIFIER EQUAL NUMBER linesynch .

    $default  reduce using rule 14 (optionslist)


State 111

   15 optionslist: optionslist IDENTIFIER EQUAL NEGNUMBER linesynch .

    $default  reduce using rule 15 (optionslist)


State 112

   13 optionslist: optionslist IDENTIFIER EQUAL STRING linesynch .

    $default  reduce using rule 13 (optionslist)


State 113

   59 function: IDENTIFIER LPAREN arglist RPAREN .

    $default  reduce using rule 59 (function)


State 114

   51 arglist: arglist separator . arg

    IDENTIFIER  shift, and go to state 34
    NUMBER      shift, and go to state 41
    STRING      shift, and go to state 43

    arg       go to state 118
    term      go to state 97
    constant  go to state 58
    variable  go to state 59
    function  go to state 60


State 115

   41 existential: EXISTENTIAL LPAREN IDENTIFIER RPAREN .

    $default  reduce using rule 41 (existential)


State 116

   39 universal: UNIVERSAL LPAREN IDENTIFIER RPAREN .

    $default  reduce using rule 39 (universal)


State 117

   47 predicate: PIDENTIFIER LPAREN arglist RPAREN .

    $default  reduce using rule 47 (predicate)


State 118

   51 arglist: arglist separator arg .

    $default  reduce using rule 51 (arglist)
