Hi K.B. Williams,

I'm sending this email as a response to your previous emails. 

Thank you !!!

Mike Rumore
mrumore@lucent.com

1) First, since it is LUP code that is being evaluated, I need an mail 
address where I can send you copies of the matrices that were used to 
test the LUP code. The matrices came from chapter 3 in the book:

	A Collection of Matrices For Testing Computational Algorithms, 1969. 
	by R. Gregory and D. Karney.

One of my previous emails contained the results of all my test cases. The
results that you sent me match the results that I obtained. So that's good
news.

2) The problem with the 1x1 matrix was fixed. The smallest matrix I used 
was a 2x2. 

3) The Matrix annd Vector classes (as they are now) support the following
operations (none of these operations are used in the LUP code).

	Let M1, M2, M3 be NxN matrices, V1, V2 be N-vectors, and
	S be a scalar, then the following operations are already 
	included.

		M1 = M2;

		M1 += M2
		M1 -= M2
		M1 *= M2

		M1 += M2*M3
		M1 -= M2*M3
		M1 *= M2*M3

		M1 = M2 + M3
		M1 = M2 - M3
		M1 = M2*M3

		M1 = S*M2;

		M1 += S*M2
		M1 -= S*M2
		M1 *= S*M2

		M1 += S*M2*M3
		M1 -= S*M2*M3
		M1 *= S*M2*M3

		V1 = V2
		V1 += V2
		V1 -= V2
	
		V1 += M1*V2
		V1 -= M1*V2

		V1 += V2*M1
		V1 -= V2*M1
	
		V1 = S*V2
		V1 += S*V2
		V1 -= S*V2

		etc.
	
------------------------- my results for LUP tests -----------------------
m is ... matrix[4,4] = {
1 1 1 1 
1 2 3 4 
1 4 9 16 
1 8 27 64 
}

INVERSE: minv is ... matrix[4,4] = {
4 -4.33333 1.5 -0.166667 
-6 9.5 -4 0.5 
4 -7 3.5 -0.5 
-1 1.83333 -1 0.166667 
}

m is ... matrix[3,3] = {
33 16 72 
-24 -10 -57 
-8 -4 -17 
}

y is ... {-359,281,85}

SOLUTION: x is ... {1,-2,-5}
INVERSE: minv is ... matrix[3,3] = {
-9.66667 -2.66667 -32 
8 2.5 25.5 
2.66667 0.666667 9 
}

m is ... matrix[4,4] = {
1 -2 3 1 
-2 1 -2 -1 
3 -2 1 5 
1 -1 5 3 
}

y is ... {3,-4,7,8}

SOLUTION: x is ... {1,1,1,1}
INVERSE: minv is ... matrix[4,4] = {
-0.288462 -0.730769 -0.0192308 -0.115385 
-0.730769 -0.384615 -0.115385 0.307692 
-0.0192308 -0.115385 -0.134615 0.192308 
-0.115385 0.307692 0.192308 0.153846 
}

m is ... matrix[6,6] = {
1 0 0 0 0 1 
1 1 0 0 0 -1 
-1 1 1 0 0 -1 
1 -1 1 1 0 -1 
-1 1 -1 1 1 1 
1 -1 1 -1 1 -1 
}

INVERSE: minv is ... matrix[6,6] = {
0.333333 0.333333 -0.166667 0.0833333 -0.0416667 0.0416667 
0.333333 0.333333 0.333333 -0.166667 0.0833333 -0.0833333 
0.666667 -0.333333 0.666667 0.166667 -0.0833333 0.0833333 
0 0 0 0.5 0.25 -0.25 
0 0 0 0 0.5 0.5 
0.666667 -0.333333 0.166667 -0.0833333 0.0416667 -0.0416667 
}

m is ... matrix[4,4] = {
5 7 6 5 
7 10 8 7 
6 8 10 9 
5 7 9 10 
}

y is ... {23,32,33,31}

SOLUTION: x is ... {1,1,1,1}
INVERSE: minv is ... matrix[4,4] = {
68 -41 -17 10 
-41 25 10 -6 
-17 10 5 -3 
10 -6 -3 2 
}

m is ... matrix[4,4] = {
4 3 2 1 
3 4 3 2 
2 3 4 3 
1 2 3 4 
}

INVERSE: minv is ... matrix[4,4] = {
0.6 -0.5 -1.38778e-17 0.1 
-0.5 1 -0.5 -6.34413e-17 
-4.85723e-17 -0.5 1 -0.5 
0.1 -6.66134e-17 -0.5 0.6 
}

m is ... matrix[4,4] = {
28 -42 28 -7 
-42 98 -77 21 
28 -77 70 -21 
-7 21 -21 7 
}

INVERSE: minv is ... matrix[4,4] = {
0.142857 0.142857 0.142857 0.142857 
0.142857 0.285714 0.428571 0.571429 
0.142857 0.428571 0.857143 1.42857 
0.142857 0.571429 1.42857 2.85714 
}

DETERMINANT: determinant is ... 196
m is ... matrix[10,10] = {
100 -4950 79200 -600600 2.52252e+06 -6.3063e+06 9.6096e+06 -8.7516e+06 4.3758e+06 -923780 
-4950 326700 -5.8806e+06 4.75675e+07 -2.08108e+08 5.35135e+08 -8.32432e+08 7.70141e+08 -3.89885e+08 8.31402e+07 
79200 -5.8806e+06 1.12908e+08 -9.5135e+08 4.28108e+09 -1.12378e+10 1.77585e+10 -1.6635e+10 8.50656e+09 -1.82908e+09 
-600600 4.75675e+07 -9.5135e+08 8.24504e+09 -3.78756e+10 1.01002e+11 -1.61603e+11 1.52908e+11 -7.88432e+10 1.70715e+10 
2.52252e+06 -2.08108e+08 4.28108e+09 -3.78756e+10 1.76753e+11 -4.77233e+11 7.71286e+11 -7.35869e+10 3.82086e+11 -8.32233e+10 
-6.3063e+06 5.35135e+08 -1.12378e+10 1.01002e+11 -4.77233e+11 1.30154e+11 -2.12104e+12 2.03779e+12 -1.06438e+12 2.33025e+11 
9.6096e+06 -8.32432e+08 1.77585e+10 -1.61603e+11 7.71286e+11 -2.12104e+12 3.48067e+12 -3.36398e+12 1.76609e+12 -3.88376e+11 
-8.7516e+06 7.70141e+08 -1.6635e+10 1.52908e+11 -7.35869e+10 2.03779e+12 -3.36398e+12 3.26786e+12 -1.72329e+12 3.8045e+11 
4.3758e+06 -3.89885e+08 8.50656e+09 -7.88432e+10 3.82086e+11 -1.06438e+12 1.76609e+12 -1.72329e+12 9.12328e+11 -2.02114e+11 
-923780 8.31402e+07 -1.82908e+09 1.70715e+10 -8.32233e+10 2.33025e+11 -3.88376e+11 3.8045e+11 -2.02114e+11 4.49142e+10 
}

INVERSE: minv is ... matrix[10,10] = {
0.3159 0.0492466 0.00891291 0.00122449 1.64801e-10 1.0663e-10 7.03394e-05 9.98765e-11 -0.000202042 -0.000488071 
0.0492466 0.0105065 0.00217932 0.000324095 4.30116e-11 3.60425e-11 2.10195e-05 3.82204e-11 -6.30488e-05 -0.000154834 
0.00891291 0.00217932 0.000487921 7.62442e-05 1.12877e-11 1.22448e-11 5.36653e-06 1.52079e-11 -1.659e-05 -4.1211e-05 
0.00122449 0.000324095 7.62442e-05 1.23294e-05 2.21901e-12 3.26973e-12 9.21685e-07 5.5715e-12 -2.91611e-06 -7.30876e-06 
1.64801e-10 4.30116e-11 1.12877e-11 2.21901e-12 1.24065e-19 7.49717e-20 6.83525e-13 1.50993e-12 2.2899e-12 2.96506e-12 
1.0663e-10 3.60425e-11 1.22448e-11 3.26973e-12 7.49717e-20 -8.53686e-13 -6.50414e-13 1.49878e-20 8.10803e-13 1.64491e-12 
7.03394e-05 2.10195e-05 5.36653e-06 9.21685e-07 6.83525e-13 -6.50414e-13 7.72451e-08 -2.91214e-13 -2.56214e-07 -6.5425e-07 
9.98765e-11 3.82204e-11 1.52079e-11 5.5715e-12 1.50993e-12 1.49878e-20 -2.91214e-13 7.71536e-21 5.54645e-13 1.20852e-12 
-0.000202042 -6.30488e-05 -1.659e-05 -2.91611e-06 2.2899e-12 8.10803e-13 -2.56214e-07 5.54645e-13 8.67823e-07 2.23503e-06 
-0.000488071 -0.000154834 -4.1211e-05 -7.30876e-06 2.96506e-12 1.64491e-12 -6.5425e-07 1.20852e-12 2.23503e-06 5.77659e-06 
}

m is ... matrix[6,6] = {
36 -630 3360 -7560 7560 -2772 
-630 14700 -88200 211680 -220500 83160 
3360 -88200 564480 -1.4112e+06 1.512e+06 -582120 
-7560 211680 -1.4112e+06 3.6288e+06 -3.969e+06 1.55232e+06 
7560 -220500 1.512e+06 -3.969e+06 4.41e+06 -1.74636e+06 
-2772 83160 -582120 1.55232e+06 -1.74636e+06 698544 
}

INVERSE: minv is ... matrix[6,6] = {
1 0.5 0.333333 0.25 0.2 0.166667 
0.5 0.333333 0.25 0.2 0.166667 0.142857 
0.333333 0.25 0.2 0.166667 0.142857 0.125 
0.25 0.2 0.166667 0.142857 0.125 0.111111 
0.2 0.166667 0.142857 0.125 0.111111 0.1 
0.166667 0.142857 0.125 0.111111 0.1 0.0909091 
}

m is ... matrix[6,6] = {
-6 630 -6720 22680 -30250 13860 
105 -7350 88200 -317520 441000 -207900 
-560 29400 -376320 1.4112e+06 -2.016e+06 970200 
1260 -52920 705600 -2.7216e+06 3.969e+06 -1.9404e+06 
-1260 44100 -604800 2.3814e+06 -3.528e+06 1.74636e+06 
462 13860 194040 -776160 116420 -582120 
}

INVERSE: minv is ... matrix[6,6] = {
-1 -0.666667 -0.428571 -0.25 -0.111111 -2.01018e-16 
0.236637 0.105169 0.0507041 0.0236597 0.00876041 -3.76403e-06 
0.0963713 0.0474596 0.0242202 0.0117182 0.00444887 -2.19569e-06 
0.0364698 0.0186768 0.00979761 0.00483592 0.00186362 -1.46379e-06 
0.00625823 0.00278062 0.00134 0.000624717 0.000230693 -1.05393e-06 
-0.0104104 -0.00655148 -0.00385498 -0.00205198 -0.000835333 -7.98431e-07 
}

m is ... matrix[4,4] = {
4 3 2 1 
3 6 4 2 
2 4 6 3 
1 2 3 4 
}

INVERSE: minv is ... matrix[4,4] = {
0.4 -0.2 1.38778e-17 0 
-0.2 0.4 -0.2 0 
0 -0.2 0.4 -0.2 
0 0 -0.2 0.4 
}

m is ... matrix[3,3] = {
-73 78 24 
92 66 25 
-80 37 10 
}

DETERMINANT: determinant is ... 990.519
m is ... matrix[3,3] = {
-73 78 24 
92 66 25 
-80 37 10.01 
}

DETERMINANT: determinant is ... 991.509
m is ... matrix[3,3] = {
-73 78 24 
92.01 66 25 
-80 37 10 
}

DETERMINANT: determinant is ... 990.561
m is ... matrix[3,3] = {
-73 78.01 24 
92 66 25 
-80 37 10 
}

DETERMINANT: determinant is ... 990.519
m is ... matrix[3,3] = {
-73 78.01 24 
0 66 25 
0 0 10 
}

DETERMINANT: determinant is ... 48180


