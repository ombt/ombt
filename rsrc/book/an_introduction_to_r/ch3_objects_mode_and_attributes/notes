1) attributes of objects: mode and length

atomic structures all have have the same type for 
their components: for example, vector of integers,
or vector of strings, etc.

type is also called "mode".

there are several NA, one for each atomic or basic type:

logical, numeric, complex, character, or raw.

2) also have lists. mode is list. ordered sequence of objects
which can be of any mode. lists are recurrsive and can have
lists as members.

3) mode is a property of an pbject.

4) another property for each object is length.

5) modes and coersion of modes:

> z<- 0:9
> z
 [1] 0 1 2 3 4 5 6 7 8 9
> mode(z)
[1] "numeric"
> z <- as.character(z)
> mode(z)
[1] "character"
> z
 [1] "0" "1" "2" "3" "4" "5" "6" "7" "8" "9"
> z <- as.integer(z)
> mode(z)
[1] "numeric"
> z
 [1] 0 1 2 3 4 5 6 7 8 9

6) length of an object:

empty object still has a mode

x <- numeric()
mode(x)
x

> x <- numeric()
> x
numeric(0)
> mode(x)
[1] "numeric"

7) creating empty object and assigning only some values:

> e[3] <- 17
Error in e[3] <- 17 : object 'e' not found
> e <- numeric()
> e[3] <- 17
> e
[1] NA NA 17

> a <- 1:10
> a
 [1]  1  2  3  4  5  6  7  8  9 10
> a <- a[2 * 1:5]
> a
[1]  2  4  6  8 10
> 2*1:5
[1]  2  4  6  8 10
> a <- 2*(1:10)
> a
 [1]  2  4  6  8 10 12 14 16 18 20
> a <- a[2 * 1:5]
> a
[1]  4  8 12 16 20
> 2 * 1:5
[1]  2  4  6  8 10

8) can also truncate a vectorby setting the object attribute length:

> a
[1]  4  8 12 16 20
> length(a) = 3
> a
[1]  4  8 12

9) changing attributes is possible but can be very tricky and
dangerous:

> z <- 1:10
> z
 [1]  1  2  3  4  5  6  7  8  9 10
> length(z)
[1] 10
> attributes(z)
NULL
> attr(z, "dim") <- c(10,10)
Error in attr(z, "dim") <- c(10, 10) : 
  dims [product 100] do not match the length of object [10]
> attr(z, "dim") <- c(2,5)
> z
     [,1] [,2] [,3] [,4] [,5]
[1,]    1    3    5    7    9
[2,]    2    4    6    8   10
> attr(z)
Error in attr(z) : either 2 or 3 arguments are required
> attributes(z)
$dim
[1] 2 5

attr() is NOT the same as attributes().

10) class of an object is reported by the class(): used for 
object-oriented programming in R.

> z
     [,1] [,2] [,3] [,4] [,5]
[1,]    1    3    5    7    9
[2,]    2    4    6    8   10
> attributes(z)
$dim
[1] 2 5

> class(z)
[1] "matrix"

other class types are: numeric, logical, character, list, matrix, 
array, factor, data.frame.

class is used by some functions (plot()) to determine how 
to use the data.







