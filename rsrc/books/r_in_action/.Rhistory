source("plot1.R")
dev.off()
savehistory()
source(".Rproxy")
install.packages("Hmisc")
q()
savehistory()
source("plot2.R")
source("plot2.R")
savehistory()
source("plot3.R")
savehistory()
source(
source("ch4.1.R")
ls()
leadership
source("ch4.2.R")
source("ch4.2.R", echo=TRUE)
leadership
source("ch4.3.R", echo=TRUE)
source("ch4.3.R", echo=TRUE)
leadership
leadership
source("ch4.3.R", echo=TRUE)
fix(leadership)
leadership
savehistory()
names(leadership)
names(leadership)[2]
names(leadership)[2] <- "Test Date"
names(leadership)
names(leadership)[2] <- "TestDate"
names(leadership)
leadership
install.packages("plyr")
names(leadership)[6:10] <- c("item1", "item2", "item3", "item4", "item5")
leadership
library(plyr)
plyr
names(leadership)
rename(leadership, c(manager="Mangler", gender="Sex"))
rename(leadership, c(manager="Mangler", gender="Sex"))leadership
leadership
leadership=rename(leadership, c(manager="Mangler", gender="Sex"))leadership
leadership=rename(leadership, c(manager="Mangler", gender="Sex"))
leadership
savehistory()
c <- c(1,2,3,NA,5,6,NA,8)
is.na(c_
is.na(c)
c[is.na(c)]
c[ ! is.na(c)]
savehistory()
is.na(leadership[,6:10[)
is.na(leadership[,6:10])
q()
leadership
x=c(1,2,NA,4)
y = x[1]+x[2]+x[3]+x[4]
y
y=sum(x)
y
y=sum(x,na.rm=TRUE)
y
leadership
names[[1]
]
names[[1]]
names(leadership)
names(leadership)[[1]]
names(leadership)[1]
names(leadership)[1]="manager"
names(leadership)
names(leadership)[2]="date"
names(leadership)
leadership[["agecat"]]
leadership[["agecat"]]=NULL
names(leadership)
leadership
newdata=na.omit(leadership)
newdata
source("ch4.6.R", echo=TRUE)
source("ch4.6.R", echo=TRUE)
source("ch4.6.R", echo=TRUE)
d
source("ch4.6.R", echo=TRUE)
source("ch4.6.R", echo=TRUE)
source("ch4.6.R", echo=TRUE)
ls()
myformat
leadership$date
as.Date(leadership$date, myformat)
savehistory()
Sys.Date()
Sys.Time()
Sys.time()
date
date()
today <- Sys.Date()
format(today, format="%B %d %Y")
format(today, format="%A")
source("ch4.6.R", echo=TRUE)
source("ch4.6.R", echo=TRUE)
source("ch4.6.R", echo=TRUE)
source("ch4.6.R", echo=TRUE)
source("ch4.6.R", echo=TRUE)
source("ch4.6.R", echo=TRUE)
source("ch4.6.R", echo=TRUE)
source("ch4.6.R", echo=TRUE)
source("ch4.7.R", echo=TRUE)
source("ch4.7.R", echo=TRUE)
source("ch4.8.R", echo=TRUE)
source("ch4.10.1.R", echo=TRUE)
leadership
names(leadership)[6:9]
names(leadership)[6:10]
names(leadership)[6:10]=c("q1","q2","q3","q4","q5")
names(leadership)
source("ch4.10.1.R", echo=TRUE)
source("ch4.10.2.R", echo=TRUE)
source("ch4.10.2.R", echo=TRUE)
source("ch4.10.2.R", echo=TRUE)
source("ch4.10.2.R", echo=TRUE)
savehistory()
q()
nd = leadership[1:3,]
nd
attach(leadership)
detach(leadership)
ls()
attach(leadership)
nd=leadrship[gender=="M" & age . 30,]
nd=leadrship[gender=="M" & age > 30,]
nd=leadership[gender=="M" & age > 30,]
nd
nd=leadership[gender=="M" & age < 30,]
nd
leadership
nd=leadership[age < 30,]
nd
q()
source("ch4.10.3.R")
source("ch4.10.3.R")
source("ch4.10.3.R")
leadership
leadership
leadership
leadership
leadership
leadership
leadership
source("ch4.10.3.R")
source("ch4.10.3.R",echo=TRUE)
source("ch4.10.3.R",echo=TRUE)
w
source("ch4.10.4.R",echo=TRUE)
leadership
source("ch4.10.4.R",echo=TRUE)
source("ch4.10.4.R",echo=TRUE)
library(sqldf)
mtcars
source("ch4.11.R",echo=TRUE)
source("ch4.11.R",echo=TRUE)
source("ch4.11.R",echo=TRUE)
source("ch4.11.R",echo=TRUE)
savehistory()
q()
source("R5.1.R")
source("ch5.1.R")
source("ch5.1.R",echo=TRUE)
source("ch5.1.R",echo=TRUE)
source("ch5.1.R",echo=TRUE)
library(MASS)
source("ch5.1.R",echo=TRUE)
source("ch5.2.R",echo=TRUE)
source("ch5.2.R",echo=TRUE)
source("ch5.2.R",echo=TRUE)
source("ch5.3.R",echo=TRUE)
savehistory()
q()
source("ch5.3.R",echo=TRUE)
z
score
r=roster
r
r$score=NULL
r$grade=NULL
r
mm=mean(r$math)
mm=mean(r$Math)
mm=sd(r$Math)
mm=mean(r$Math)
msd=mean(r$Math)
msd
mm
msd=sd(r$Math)
msd
(r$Math-mm)/msd
z
source("ch5.3.R",echo=TRUE)
source("ch5.3.R",echo=TRUE)
source("ch5.3.R",echo=TRUE)
source("ch5.3.R",echo=TRUE)
source("ch5.3.R",echo=TRUE)
source("ch5.3.R",echo=TRUE)
source("ch5.3.R",echo=TRUE)
source("ch5.3.R",echo=TRUE)
savehistory()
q()
source("ch5.4.R",echo=TRUE)
source("ch5.4.R",echo=TRUE)
help(runif)
help(runif)
runif(50, 1, 10)
runif(50, 1, 100)
ceiling(runif(50, 1, 100))
source("ch5.4.R",echo=TRUE)
source("ch5.4.R",echo=TRUE)
source("ch5.4.R",echo=TRUE)
source("ch5.4.R",echo=TRUE)
help(source)
source("ch5.4.R",echo=TRUE,print.eval=TRUE)
source("ch5.4.R",echo=TRUE,max.deparse.length=10000)
help(ifelse)
source("ch5.4.R",echo=TRUE,max.deparse.length=10000)
source("ch5.4.R",echo=TRUE,max.deparse.length=10000)
source("ch5.4.R",echo=TRUE,max.deparse.length=10000)
source("ch5.4.R",echo=TRUE,max.deparse.length=10000)
source("ch5.4.R",echo=TRUE,max.deparse.length=10000)
source("ch5.4.R",echo=TRUE,max.deparse.length=10000)
source("ch5.4.R",echo=TRUE,max.deparse.length=10000)
source("ch5.4.R",echo=TRUE,max.deparse.length=10000)
source("ch5.4.R",echo=TRUE,max.deparse.length=10000)
source("ch5.4.R",echo=TRUE,max.deparse.length=10000)
source("ch5.4.R",echo=TRUE,max.deparse.length=10000)
source("ch5.4.R",echo=TRUE,max.deparse.length=10000)
source("ch5.5.R",echo=TRUE,max.deparse.length=10000)
[A
source("ch5.5.R",echo=TRUE,max.deparse.length=10000)
source("ch5.5.R",echo=TRUE,max.deparse.length=10000)
source("ch5.6.R",echo=TRUE)
source("ch5.6.R",echo=TRUE)
t(mtcars)
t(mtcars)
source("ch5.6.R",echo=TRUE)
q()
q()
source("ch5.6.R",echo=TRUE)
source("ch5.6.R",echo=TRUE)
names(mtcars)
source("ch5.6.R",echo=TRUE)
source("ch5.6.R",echo=TRUE)
source("ch5.6.R",echo=TRUE)
install.packages("reshape2")
source("ch5.6.R",echo=TRUE)
source("ch5.6.R",echo=TRUE)
source("ch5.6.R",echo=TRUE)
source("ch5.6.R",echo=TRUE)
source("ch5.6.R",echo=TRUE)
source("ch5.6.R",echo=TRUE)
source("ch5.6.R",echo=TRUE)
source("ch5.6.R",echo=TRUE)
dcast
dcast
source("ch5.6.R",echo=TRUE)
source("ch5.6.R",echo=TRUE)
mean
rm(mean)
source("ch5.6.R",echo=TRUE)
source("ch5.6.R",echo=TRUE)
source("ch5.6.R",echo=TRUE)
source("ch5.6.R",echo=TRUE)
source("ch5.6.R",echo=TRUE)
savehistory()
saveimage()
saveworkspace()
apropos("save*")
save.image()
install.packages("vcd")
data(vcd)
library(vcd)
ls()
source("ch6.1.R")
q()
source("ch6.1.R")
counts
source("ch6.1.R",echo=TRUE)
source("ch6.1.R",echo=TRUE)
 barplot(counts,
+         main="Simple Bar Plot",
+         xlab="Improvement", 
+         ylab="Frequency")
source("ch6.1.R",echo=TRUE)
elp(plot)
help(plot)
source("ch6.1.R",echo=TRUE)
dev.off()
dev.off()
dev.off()
dev.off()
source("ch6.1.R",echo=TRUE)
ret=dev.off()
ret
str(ret)
names(ret)
names(ret)
ret=dev.off()
names(ret)
ret$X11cairo
ret[[X11cairo]]
ret[["X11cairo"]]
ret[1]
ret=dev.off()
ret[1]
ret=dev.off()
ret[1]
ret=dev.off()
ret
dev.off()
v=runif(10,1,10)
barplot(v)
ret=dev.off()
ret
ret[1]
ret["null device"]
x11()
x11()
x11()
while ((ret=dev.off())[1] > 1) ;
while ((ret=dev.off())[1] > 1) { }
source("ch6.1.R",echo=TRUE)
while ((ret=dev.off())[1] > 1) { }
q()
ls(closedevs)
ls(closedev)
ls()
closedevs()
dev.cur()
dev.cur()
d=1:4
barplot(d)
dev.cur()
closedevs()
q()
closedevs
rm(closedevs)
q()
closedevs
d=1:4
barplot(d)
closedevs()
q()
q()
ls()
closedevs
source("plot2.R")
closedevs()
source("plot1.R")
closedevs()
source("plot1.R")
source("plot1.R")
closedevs()
source("ch6.1.2.R",echo=TRUE)
closedevs()
counts
counts[,1]
counts[1,]
counts[1:2,]
str(counts)
str(as.matrix(counts))
state
library(state)
data(state)
state
state,region
state
state.region
state.x77
source("ch6.1.3.R")
source("ch6.1.3.R",echo=TRUE)
source("ch6.1.3.R",echo=TRUE)
barplot(means$x, names.arg=means$Group.1)
> title("Mean Illiteracy Rate")
closedevs()
source("ch6.1.3.R",echo=TRUE)
closedevs()
Arthritis
source("ch6.1.3.R",echo=TRUE)
closedevs()
source("ch6.1.3.R",echo=TRUE)
closedevs()
install.packages("plotrix")
source("ch6.2.R",echo=TRUE)
closedevs()
source("ch6.2.R",echo=TRUE)
closedevs()
source("ch6.2.R",echo=TRUE)
closedevs()
help(rug)
source("ch6.3.R",echo=TRUE)
closedevs()
source("ch6.3.R",echo=TRUE)
pdf
help(pdf)
pdf("/tmp/plot.pdf")
source("ch6.3.R",echo=TRUE)
closedevs()
source("ch6.3.R",echo=TRUE)
closedevs()
source("ch6.4.R",echo=TRUE)
closedevs()
library(sm)
install.packages("sm")
library(sm)
source("ch6.4.R",echo=TRUE)
C
source("ch6.4.R",echo=TRUE)
legend(locator(1), levels(cyl.f), fill=colfill)
closedevs()
source("ch6.45.R",echo=TRUE)
source("ch6.5.R",echo=TRUE)
closedevs()
closedevs
source("ch6.5.R",echo=TRUE)
closedevs
closedevs()
source("ch6.5.R",echo=TRUE)
closedevs()
source("ch6.5.R",echo=TRUE)
closedevs()
install.packages("vioplot")
install.packages("vioplot")
source("ch6.5.R",echo=TRUE)
closedevs()
source("ch6.6.R",echo=TRUE)
closedevs()
source("ch6.6.R",echo=TRUE)
closedevs()
head(mtcars)
mtcars$cyl.f=NULL
mtcars$am.f=NULL
head(mtcars)
rownames(mtcars)
colnames(mtcars)
source("ch7.1.R",echo=TRUE)
myvars
colnames(mtcars)
colnames(mtcars)
source("ch7.1.R",echo=TRUE)
source("ch7.1.R",echo=TRUE)
source("ch7.1.R",echo=TRUE)
source("ch7.1.R",echo=TRUE)
ls()
install.packages("Hmisc", "pastecs", "psych")
install.packages("Hmisc")
install.packages("pastecs")
install.packages("psych")
source("ch7.1.R",echo=TRUE)
source("ch7.1.R",echo=TRUE)
source("ch7.1.R",echo=TRUE)
install.packages("doBy")
install.packages("doBy")
source("ch7.1.R",echo=TRUE)
source("ch7.1.R",echo=TRUE)
source("ch7.2.R",echo=TRUE)
Arthritis
source("ch7.2.1.R",echo=TRUE)
help(source)
source("ch7.2.1.R",echo=TRUE,max.deparse.length = 10000)
source("ch7.2.1.R",echo=TRUE,max.deparse.length = 10000)
source("ch7.2.1.R",echo=TRUE,max.deparse.length = 10000)
source("ch7.2.1.R",echo=TRUE,max.deparse.length = 10000)
source("ch7.2.1.R",echo=TRUE,max.deparse.length = 10000)
library(gmodels)
install.packages("gmodels")
library(gmodels)
source("ch7.2.1.R",echo=TRUE,max.deparse.length = 10000)
source("ch7.2.1.R",echo=TRUE,max.deparse.length = 10000)
source("ch7.2.1.R",echo=TRUE,max.deparse.length = 10000)
source("ch7.2.1.R",echo=TRUE,max.deparse.length = 10000)
source("ch7.2.1.R",echo=TRUE,max.deparse.length = 10000)
source("ch7.2.2.R",echo=TRUE,max.deparse.length = 10000)
source("ch7.2.2.R",echo=TRUE,max.deparse.length = 10000)
source("ch7.2.2.R",echo=TRUE,max.deparse.length = 10000)
source("ch7.2.2.R",echo=TRUE,max.deparse.length = 10000)
source("ch7.2.3.R",echo=TRUE,max.deparse.length = 10000)
source("ch7.3.1.R",echo=TRUE,max.deparse.length = 10000)
source("ch7.3.1.R",echo=TRUE,max.deparse.length = 10000)
source("ch7.3.1.R",echo=TRUE,max.deparse.length = 10000)
insall.package("ggm
insall.package("ggm")
install.package("ggm")
install.packages("ggm")
install.packages("MMF")
install.packages("NMF")
install.packages("ggm")
q()
install.packages(
install.packages("RSQLite")
source("ch7.3.1.R",echo=TRUE,max.deparse.length = 10000)
source("ch7.3.2.R",echo=TRUE,max.deparse.length = 10000)
install.packages("psych")
install.packages("MASS")
library(MASS)
source("ch7.4.R",echo=TRUE,max.deparse.length = 10000)
source("ch7.4.1.R",echo=TRUE,max.deparse.length = 10000)
source("ch7.4.2.R",echo=TRUE,max.deparse.length = 10000)
source("ch7.4.2.R",echo=TRUE,max.deparse.length = 10000)
source("ch7.5.1.R",echo=TRUE,max.deparse.length = 10000)
source("ch7.5.2.R",echo=TRUE,max.deparse.length = 10000)
wmc
q()
