Class:		Scientific Programming Applications
		CIS 255
		Spring 1996 Quarter

Time/Room:	Class meets Monday and Wednesday from 4:30PM to 6:50PM 
		in IC-2005.
		Lab class meets Wednesday from 4:30PM to 5:20PM in
		SCC-125.

Instructor:	Mike Rumore
		Work phone - 713-4396. Leave a message if I'm not in.
		Home phone - 690-8243. Leave a message if I'm not in.
		Office hours - on Monday and Wednesday immediately 
		after class.

Course 
Description:	Comprehensive coverage of the FORTRAN programming 
		language. Emphasis is on design, programming and 
		documentation of scientific applications, including 
		statistical analysis, curve fitting, optimization, 
		and engineering and scientific modeling applications.

Prerequisites:	Mathematics 231, Calculus and Analytical Geometry, is 
		required as a prerequisite or you must be currently 
		enrolled. Be advised, I will use differential calculus 
		through out the class.

Required Text:	Understanding FORTRAN 77 with Structured Problem
		Solving, second edition, by Michel Boillot.

Additional
References:	These are references which I used in developing 
		the syllabus for this class. I'm listing them only
		for your information. They are NOT required.

		Schaum's Outline Series: Programming with
		Fortran 77 by William E. Mayo and Martin
		Cwiakala. (very concise; straight to the point
		and with many examples)

		Schaum's Outline Series: Numerical Analysis,
		second edition, by Francis Scheid.

		Applied Numerical Methods For Engineers by
		Terrence J. Akai. (a very good reference and
		very readable)

		Data Reduction and Error Analysis for the
		Physical Sciences by Philip R. Bevington.
		(a classic among physicists)


Grading:	Six to eight programs	40%
		Two exams		60%

		Examinations can cover anything taught in 
		class, or covered in the assigned readings or
		hand-outs.

		No make-up exams will be given.

		Programming projects should contain program
		listings, output and flowcharts or pseudo-code.

		All programs must be handed in at the beginning
		of class on the due date. Late projects are penalized
		10% of the total for each class day that they are late.

		Progamming assignments can come from the following
		topics. However, before I assign any of the following 
		topics I will cover them in class.

		1) statistical analysis
		2) least-squares approximation
		3) systems of linear equations
		4) interpolation
		5) optimization
		6) finding roots
		7) graphing

		WARNING: Don't cheat. You will immediately FAIL the
		entire class. If you are having trouble with the
		class, then call me or see me after class. Don't
		wait until it is too late.

Grading Scale:	90% or more - A
		80% or more - B
		70% or more - C
		60% or more - D
		< 60%       - F


Tentative Schedule - can change depending on how class is 
progressing.

Week	Topic
--------------------------------------------------------------------
1	algorithms development and program design.
	sections 1.1, 1.2, 1.3

2	basics: data types, arithmetic, list-directed I/O, 
	library functions
	sections 2.1, 2.2, 2.3, 2.4, 2.5, 3.3, 8.3

3	decision making: if-statements and goto's,
	subroutines
	sections 3.1, 3.2, 3.4, 3.5, 8.2.4

4	do-loops and while-loops
	sections 3.6, 4.1, 4.2, 4.3

5	arrays: 1 and multi-dimensional
	MIDTERM EXAM
	sections 6.1, 6.3, 6.3, 6.4, 7.1, 7.2, 7.4

6	functions and more on subroutines
	sections 8.1, 8.2, 8.3, 8.4

7	formatted I/O
	sections 5.1, 5.2, 5.3

8	character data
	appendix B

9	data files
	no class on 5/27, Memorial Day
	sections 9.1, 9.2, 9.3

10	applications 

11	more applications,
	FINAL EXAM
