Tic Tac Toe
===========

This program implements the two user game called Tic Tac Toe: human
vs computer. The program is based on the minimax-algorithm. The use
of alpha-beta cutoffs to improve the efficiency of the search and
the level of "intelligence" of the computer (the depth of the search)
can be selected by the user.

The classes
-----------

Two classes are defined by this program: one class represents moves
that can be made on the Tic Tac Toe board, the other implements
the game of Tic Tac Toe itself. The first class is called TicMove:

class TicMove 

Objects of class TicMove consist of a single item: the squary occupied
by this move. The other class is called TicGame:

class TicGame: public Minimax<TicMove>

Class TicGame implements the game of Tic Tac Toe. It is derived from
class Minimax so that it can make use of the minimax-algorithm that
is implemented by this class. Note the use of template-based derivation.


The algorithm
-------------

The algorithm used by the program follows naturally from the implementation
of the functions defined pure virtual in class Minimax. Class TicGame
contains the board configuration: a simple array of 9 elements. New
moves are generated by generate_moves(), from the point of view of the
player whose turn is on. This function scans the board for all empty
squares and adds them to the set of possible moves. Function game_ends()
decides whether the game has ended yet: it examines the board to check
if any player has won or if it's a tie. The most interesting function
is evaluate_board() that serves as the so called statis evaluation
function. It evaluates the current board configuration from the correct
of view so that the best of the possible moves generated by
generate_moves() can be selected. The computation of this function
is based on the following heuristic:

Suppose X is to move:
    get 1000 points for each three X's in a row.
    get  100 points for each two X's and an empty square in a row.
    get   10 points for each one X and two empty squares in a row.
    lose the same number of points if it is O's and empties in a row.

The same applies if it's O's move, reversing the rolls.


Using the Tic Tac Toe program
-----------------------------

A new game of Tic Tac Toe can be played by starting the program. On
startup the user is asked if alpha-beta cutoffs must be used. The use
of alpha-beta cutoffs improves the efficiency of the search, but can
be disabled if so desired. Next the depth of the search that will be
used by the computer must be entered. By entering a higher depth-limit
the "intelligence" of the play of the computer will be increased. Next
the user selects who starts first and then the game begins.
